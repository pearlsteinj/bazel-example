load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

go_library(
    name = "main_lib",
    srcs = [
        "main.go",
        "server.go",
    ],
    importpath = "github.com/pearlsteinj/bazel-example/backend",
    visibility = ["//visibility:private"],
    deps = [
        "//proto:backend_go_proto",
        "@com_github_aws_aws_xray_sdk_go//xray:go_default_library",
        "@com_github_google_uuid//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//grpclog:go_default_library",
        "@org_golang_google_grpc//health:go_default_library",
        "@org_golang_google_grpc//health/grpc_health_v1:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
    ],
)

go_binary(
    name = "local",
    embed = [":main_lib"],
    visibility = ["//visibility:public"],
    x_defs = {
        "main.GitCommit": "{STABLE_GIT_COMMIT}",
        "main.Version": "{STABLE_VERSION}",
    },
)

go_binary(
    name = "backend_binary",
    embed = [":main_lib"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
    visibility = ["//visibility:public"],
    x_defs = {
        "main.GitCommit": "{STABLE_GIT_COMMIT}",
        "main.Version": "{STABLE_VERSION}",
    },
)

pkg_tar(
    name = "tar",
    srcs = [":backend_binary"],
)

oci_image(
    name = "backend_image",
    base = "@go_image_static",
    entrypoint = ["/backend_binary"],
    tars = [":tar"],
)

oci_push(
    name = "backend_container_push",
    image = ":backend_image",
    remote_tags = ["latest"],
    # TODO(you): Replace this with a repo of your choosing.
    repository = "<id>.dkr.ecr.us-east-1.amazonaws.com/backend",
)